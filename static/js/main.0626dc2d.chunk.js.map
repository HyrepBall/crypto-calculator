{"version":3,"sources":["const/fakeData.js","components/ActionsTable/ActionsTable.js","App.js","serviceWorker.js","index.js"],"names":["apiArray","orderID","clOrdID","clOrdLinkID","account","symbol","side","simpleOrderQty","orderQty","price","displayQty","stopPx","pegOffsetValue","pegPriceType","currency","settlCurrency","ordType","timeInForce","execInst","contingencyType","exDestination","ordStatus","triggered","workingIndicator","ordRejReason","simpleLeavesQty","leavesQty","simpleCumQty","cumQty","avgPx","multiLegReportingType","text","transactTime","timestamp","Column","Table","ActionsTable","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","totalTradesArray","loading","inherits","createClass","key","value","sortedByCurrencyObj","_","groupBy","o","keys","map","index","tradesArray","reduce","accumulator","currentOperation","toLowerCase","currencyType","zeroToCloseTrade","currencyArray","objectSpread","toConsumableArray","id","title","operations","filter","setState","dataIndex","width","render","record","_this$state","react_default","a","createElement","table","className","size","pagination","columns","renderColumns","rowKey","dataSource","expandedRowRender","moment","format","color","style","Math","abs","substring","Component","App","ActionsTable_ActionsTable_ActionsTable","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0626dc2d.chunk.js","sourcesContent":["const fakeArray = [\r\n\t{\r\n\t\tid: 0,\r\n\t\ttime: 'Jan 17, 2019, 8:00:05 AM',\r\n\t\tsymbol: 'ETHUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Buy',\r\n\t\texecQty: 100,\r\n\t\texecPrice: 120.85,\r\n\t\tvalue: 0.0012,\r\n\t\tfeeRate: 0.0750,\r\n\t\tfeePaid: 0.00000090,\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\ttime: 'Jan 17, 2019, 5:20:05 AM',\r\n\t\tsymbol: 'ETHUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Buy',\r\n\t\texecQty: 5,\r\n\t\texecPrice: 120.20,\r\n\t\tvalue: -0.0012,\r\n\t\tfeeRate: 0.0750,\r\n\t\tfeePaid: 0.00000090,\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\ttime: 'Jan 17, 2019, 4:00:0 AM',\r\n\t\tsymbol: 'XBTUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Buy',\r\n\t\texecQty: 100,\r\n\t\texecPrice: 3598.0,\r\n\t\tvalue: -0.002,\r\n\t\tfeeRate: -0.0136,\r\n\t\tfeePaid: 0.00000004,\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\ttime: 'Jan 17, 2019, 4:00:0 AM',\r\n\t\tsymbol: 'ETHUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Sell',\r\n\t\texecQty: 55,\r\n\t\texecPrice: 3598.0,\r\n\t\tvalue: -0.002,\r\n\t\tfeeRate: -0.0136,\r\n\t\tfeePaid: 0.00000004,\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\ttime: 'Jan 17, 2019, 4:00:0 AM',\r\n\t\tsymbol: 'ETHUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Buy',\r\n\t\texecQty: 5,\r\n\t\texecPrice: 3598.0,\r\n\t\tvalue: -0.002,\r\n\t\tfeeRate: -0.0136,\r\n\t\tfeePaid: 0.00000004,\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\ttime: 'Jan 17, 2019, 4:00:0 AM',\r\n\t\tsymbol: 'XBTUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Sell',\r\n\t\texecQty: 50,\r\n\t\texecPrice: 3598.0,\r\n\t\tvalue: -0.002,\r\n\t\tfeeRate: -0.0136,\r\n\t\tfeePaid: 0.00000004,\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\ttime: 'Jan 17, 2019, 4:00:0 AM',\r\n\t\tsymbol: 'XBTUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Sell',\r\n\t\texecQty: 50,\r\n\t\texecPrice: 3598.0,\r\n\t\tvalue: -0.002,\r\n\t\tfeeRate: -0.0136,\r\n\t\tfeePaid: 0.00000004,\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\ttime: 'Jan 17, 2019, 4:00:0 AM',\r\n\t\tsymbol: 'ETHUSD',\r\n\t\texecType: 'Trade',\r\n\t\tside: 'Sell',\r\n\t\texecQty: 55,\r\n\t\texecPrice: 3598.0,\r\n\t\tvalue: -0.002,\r\n\t\tfeeRate: -0.0136,\r\n\t\tfeePaid: 0.00000004,\r\n\t},\r\n];\r\n\r\n\r\n\r\n//////////////////////////////////////////\r\n//////////////////////////////////////////\r\n//////////////////////////////////////////\r\n\r\n\r\n\r\nexport const apiArray = [\r\n  {\r\n    \"orderID\": \"d6c7d322-252c-8249-7320-f75910a2c6ff\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"XBTUSD\",\r\n    \"side\": \"Buy\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 3886,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Filled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 1000,\r\n    \"avgPx\": 3886,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Amended price: Amend from www.bitmex.com\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-18T19:35:02.339Z\",\r\n    \"timestamp\": \"2019-02-18T19:37:54.355Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"9f8b4369-005e-5ce8-5986-1c49a16b8f3f\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Sell\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 142.15,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Filled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 1000,\r\n    \"avgPx\": 142.15,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Submission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-18T22:43:50.036Z\",\r\n    \"timestamp\": \"2019-02-18T22:43:50.036Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"f82449f0-a25f-8b07-c738-8fcf7442e895\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Buy\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 146.2,\r\n    \"displayQty\": null,\r\n    \"stopPx\": 146.15,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Stop\",\r\n    \"timeInForce\": \"ImmediateOrCancel\",\r\n    \"execInst\": \"Close,LastPrice\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Filled\",\r\n    \"triggered\": \"StopOrderTriggered\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 1000,\r\n    \"avgPx\": 146.2,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Triggered: Order stop price reached\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T00:05:13.678Z\",\r\n    \"timestamp\": \"2019-02-19T00:05:13.678Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"30e61f03-fc34-e5e6-f9b5-af855d0206c7\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Buy\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 140.75,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"ReduceOnly\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Canceled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Canceled: Order had execInst of Close or ReduceOnly but open buy orders exceed current position of -1000\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-18T22:57:44.699Z\",\r\n    \"timestamp\": \"2019-02-19T00:05:13.678Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"3fcb1500-9be9-dd29-429a-b17bc9803663\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"XBTUSD\",\r\n    \"side\": \"Sell\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 3925,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"ReduceOnly\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Filled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 1000,\r\n    \"avgPx\": 3925,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Submission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-18T19:40:01.940Z\",\r\n    \"timestamp\": \"2019-02-19T00:38:20.313Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"9be8e02e-9626-4396-c352-ec6b89398f58\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Buy\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 148.9,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"ReduceOnly\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Canceled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Canceled: Order had execInst of Close or ReduceOnly and side of Buy but current position is 0\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T00:59:26.716Z\",\r\n    \"timestamp\": \"2019-02-19T00:59:26.716Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"08dd2196-216d-5a29-055d-9aea898d7df0\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"XBTUSD\",\r\n    \"side\": \"Sell\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": null,\r\n    \"displayQty\": null,\r\n    \"stopPx\": 3766,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Stop\",\r\n    \"timeInForce\": \"ImmediateOrCancel\",\r\n    \"execInst\": \"Close,LastPrice\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Canceled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Canceled: Cancel from www.bitmex.com\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-18T19:32:07.252Z\",\r\n    \"timestamp\": \"2019-02-19T00:59:35.128Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"47b1dd06-15dd-5aa4-4005-c90cb96027ab\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Buy\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 148.75,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"ReduceOnly\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Canceled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Canceled: Order had execInst of Close or ReduceOnly and side of Buy but current position is 0\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T00:59:58.239Z\",\r\n    \"timestamp\": \"2019-02-19T00:59:58.239Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"7efd676a-89c4-7f08-6f26-1d28ab92b0c8\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Buy\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 148.75,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Filled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 1000,\r\n    \"avgPx\": 148.75,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Submission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T01:00:08.407Z\",\r\n    \"timestamp\": \"2019-02-19T01:00:27.134Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"c6c4f7f1-deb7-d17b-6b5f-37e1f0456795\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Sell\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 150.25,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"ReduceOnly\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"Canceled\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 0,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Canceled: Cancel from www.bitmex.com\\nSubmission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T01:01:16.774Z\",\r\n    \"timestamp\": \"2019-02-19T01:01:59.968Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"7ee30bcb-82a3-9dd1-1be3-eebb5887dc6a\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Sell\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": null,\r\n    \"displayQty\": null,\r\n    \"stopPx\": 144.3,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Stop\",\r\n    \"timeInForce\": \"ImmediateOrCancel\",\r\n    \"execInst\": \"Close,LastPrice\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"New\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": false,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 1000,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Submission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T01:01:44.884Z\",\r\n    \"timestamp\": \"2019-02-19T01:01:44.884Z\"\r\n  },\r\n  {\r\n    \"orderID\": \"28105698-8935-7430-4035-8375b43210fe\",\r\n    \"clOrdID\": \"\",\r\n    \"clOrdLinkID\": \"\",\r\n    \"account\": 793053,\r\n    \"symbol\": \"ETHUSD\",\r\n    \"side\": \"Sell\",\r\n    \"simpleOrderQty\": null,\r\n    \"orderQty\": 1000,\r\n    \"price\": 150.25,\r\n    \"displayQty\": null,\r\n    \"stopPx\": null,\r\n    \"pegOffsetValue\": null,\r\n    \"pegPriceType\": \"\",\r\n    \"currency\": \"USD\",\r\n    \"settlCurrency\": \"XBt\",\r\n    \"ordType\": \"Limit\",\r\n    \"timeInForce\": \"GoodTillCancel\",\r\n    \"execInst\": \"ReduceOnly\",\r\n    \"contingencyType\": \"\",\r\n    \"exDestination\": \"XBME\",\r\n    \"ordStatus\": \"New\",\r\n    \"triggered\": \"\",\r\n    \"workingIndicator\": true,\r\n    \"ordRejReason\": \"\",\r\n    \"simpleLeavesQty\": null,\r\n    \"leavesQty\": 1000,\r\n    \"simpleCumQty\": null,\r\n    \"cumQty\": 0,\r\n    \"avgPx\": null,\r\n    \"multiLegReportingType\": \"SingleSecurity\",\r\n    \"text\": \"Submission from www.bitmex.com\",\r\n    \"transactTime\": \"2019-02-19T01:02:27.827Z\",\r\n    \"timestamp\": \"2019-02-19T01:02:27.827Z\"\r\n  }\r\n]\r\n\r\nexport default fakeArray;","import React, {Component} from 'react';\r\nimport { Table,  } from 'antd';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport fakeArray, { apiArray } from 'const/fakeData';\r\nimport './ActionsTable.css';\r\n\r\nconst { Column } = Table;\r\nconst red = \"#F39981\";\r\nconst green = '#90D6A4';\r\n\r\nexport class ActionsTable extends Component {\r\n\r\n\tstate = {\r\n\t\ttotalTradesArray: [],\r\n\t\tloading: true,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst sortedByCurrencyObj = _.groupBy(apiArray, o => o.symbol);\r\n\r\n\t\tconst sortedByCurrencyArray = Object.keys(sortedByCurrencyObj).map(function(key, index) {\r\n\t\t\tlet tradesArray = [];\r\n\r\n\t\t  const groupByTrades = sortedByCurrencyObj[key].reduce(( accumulator, currentOperation, index) => {\r\n\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t// set negative value to orderQty if first side === sell\r\n\t\t\t\t\tif (currentOperation.side.toLowerCase() === 'sell' ) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tcurrencyType: currentOperation.symbol,\r\n\t\t\t\t\t\t\tzeroToCloseTrade: - currentOperation.orderQty,\r\n\t\t  \t\t\t\tcurrencyArray: [{\r\n\t\t\t\t\t\t\t\t...currentOperation,\r\n\t\t\t\t\t\t\t\torderQty: - currentOperation.orderQty\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcurrencyType: currentOperation.symbol,\r\n\t\t\t\t\t\tzeroToCloseTrade: currentOperation.orderQty,\r\n\t\t  \t\t\tcurrencyArray: [currentOperation]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (index > 0) {\r\n\t\t\t\t\tlet zeroToCloseTrade;\r\n\t\t\t\t\tif (currentOperation.side.toLowerCase() === 'buy') {\r\n\t\t\t\t\t\tzeroToCloseTrade = accumulator.zeroToCloseTrade + currentOperation.orderQty;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tzeroToCloseTrade = accumulator.zeroToCloseTrade - currentOperation.orderQty;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroToCloseTrade !== 0) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...accumulator,\r\n\t\t\t\t\t\t\tzeroToCloseTrade,\r\n\t\t\t\t\t\t\tcurrencyArray: [...accumulator.currencyArray, currentOperation]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else \r\n\t\t\t\t\t// Finish mapping. Defined ZERO value. Trade closed.\r\n\t\t\t\t\tif (zeroToCloseTrade === 0) {\r\n\t\t\t\t\t\ttradesArray = [...accumulator.currencyArray, currentOperation]\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t...accumulator,\r\n\t\t\t\t\t\t\tzeroToCloseTrade,\r\n\t\t\t\t\t\t\tcurrencyArray: [...accumulator.currencyArray, currentOperation]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t  }, {});\r\n\r\n\t\t\treturn {\r\n\t\t\t \tid: `trade_${index}`,\r\n\t\t\t \ttitle: `Trade #${index}`,\r\n\t\t\t \toperations: tradesArray\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tconst totalTradesArray = sortedByCurrencyArray.filter(currencyArray => currencyArray.operations.length > 0);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttotalTradesArray,\r\n\t\t\tloading: false\r\n\t\t})\r\n\r\n\t}\r\n\r\n\trenderColumns() {\r\n\t\tconst columns = [\r\n\t\t\t{\r\n\t\t\t  title: 'Title',\r\n\t\t\t  dataIndex: 'title',\r\n\t\t\t  key: 'title',\r\n\t\t\t  width: 150,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t  title: 'Operations count',\r\n\t\t\t  key: 'operationsCount',\r\n\t\t\t  render: record => { return record.operations.length },\r\n\t\t\t},\r\n\t\t];\r\n\t\treturn columns;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { totalTradesArray, loading } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Table \r\n\t\t\t\t\tclassName=\"ActionsTable\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tpagination={false}\r\n\t\t\t\t\tloading={loading}\r\n\t\t\t\t\tcolumns={this.renderColumns()} \r\n\t\t\t\t\trowKey={record => record.id}\r\n\t\t\t\t\tdataSource={totalTradesArray} \r\n\t\t\t\t\texpandedRowRender={record => (\r\n\t\t\t\t\t\t<Table\r\n\t\t\t\t\t\t\tclassName=\"ActionsTable--expandable\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\trowKey={record => record.orderID}\r\n\t\t\t\t\t\t\tdataSource={record.operations} \r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Time'\r\n\t\t\t\t\t\t\t  key='expTime'\r\n\t\t\t\t\t\t\t  render={record => moment(record.timestamp).format('MMM DD YYYY, h:mm:ss A') }\r\n\t\t\t\t\t\t\t  width={180}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Symbol'\r\n\t\t\t\t\t\t\t  dataIndex='symbol'\r\n\t\t\t\t\t\t\t  key='expSymbol'\r\n\t\t\t\t\t\t\t  width={120}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Exec Type'\r\n\t\t\t\t\t\t\t  dataIndex='execType'\r\n\t\t\t\t\t\t\t  key='expExecType'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Side'\r\n\t\t\t\t\t\t\t  key='expSide'\r\n\t\t\t\t\t\t\t  render={(record) => {\r\n\t\t\t\t\t\t\t  \tlet color;\r\n\t\t\t\t\t\t\t  \trecord.side === 'Buy'\r\n\t\t\t\t\t\t\t  \t? color = green\r\n\t\t\t\t\t\t\t  \t: color = red\r\n\r\n\t\t\t\t\t\t\t  \treturn <span style={{color}}>{record.side}</span>\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Exec Qty'\r\n\t\t\t\t\t\t\t  key='exporderQty'\r\n\t\t\t\t\t\t\t  render={(record) => {\r\n\t\t\t\t\t\t\t  \tlet color;\r\n\r\n\t\t\t\t\t\t\t  \trecord.side === 'Buy'\r\n\t\t\t\t\t\t\t  \t? color = green\r\n\t\t\t\t\t\t\t  \t: color = red\r\n\r\n\t\t\t\t\t\t\t  \treturn <span style={{color}}>{Math.abs(record.orderQty)}</span>\r\n\t\t\t\t\t\t\t  }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Exec Price'\r\n\t\t\t\t\t\t\t  dataIndex='price'\r\n\t\t\t\t\t\t\t  key='expExecPrice'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Value'\r\n\t\t\t\t\t\t\t  dataIndex='value'\r\n\t\t\t\t\t\t\t  key='expValue'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Column\r\n\t\t\t\t\t\t\t\ttitle='Order ID'\r\n\t\t\t\t\t\t\t  key='expOrderID'\r\n\t\t\t\t\t\t\t  render={record => (record.orderID.substring(0,8))}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, {Component} from 'react';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { ActionsTable } from 'components/ActionsTable/ActionsTable';\r\n\r\nexport default class App extends Component {\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<ActionsTable />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}